name: Build and Upload Binary

on:
  release:
    types:
      - created

jobs:
  build-and-upload:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Install necessary compilers and tools
      - name: Install build tools
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential mingw-w64 neofetch

      # Step 3: Run neofetch
      - name: Run neofetch
        run: |
          neofetch

      # Step 3: Compile the Linux binary
      - name: Build Linux binary
        run: |
          g++ -o main main.cpp

      # Step 4: Compile the Windows binary
      - name: Build Windows binary
        run: |
          x86_64-w64-mingw32-g++ -o main.exe main.cpp

      # Step 5: Upload the compiled Linux binary
      - name: Upload Linux binary to release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./main
          asset_name: main-linux
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Step 6: Upload the compiled Windows binary
      - name: Upload Windows binary to release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./main.exe
          asset_name: main-windows.exe
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
